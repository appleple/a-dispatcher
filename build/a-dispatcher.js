/**
 * Modules in this bundle
 * @license
 *
 * a-dispatcher:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: appleple
 *   version: 1.0.1
 *
 * This header is generated by licensify (https://github.com/twada/licensify)
 */
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.ADispatcher = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * 正規表現URLディスパッチ
 */
var UrlDispatcher = function () {
    function UrlDispatcher() {
        _classCallCheck(this, UrlDispatcher);

        this.routes = [];
    }

    _createClass(UrlDispatcher, [{
        key: "addRoute",
        value: function addRoute(path, func) {
            this.routes.push([path, func]);
        }
    }, {
        key: "run",
        value: function run(path) {
            for (var i = 0; i < this.routes.length; ++i) {
                var func = this.routes[i];
                var match = path.match(func[0]);

                match && func[1](match);
            }
        }
    }]);

    return UrlDispatcher;
}();

exports.default = UrlDispatcher;
module.exports = exports["default"];

},{}]},{},[1])(1)
});